// Code generated by protoc-gen-go. DO NOT EDIT.
// source: main.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	main.proto

It has these top-level messages:
	CreateTodoRequest
	CreateTodoResponse
	Todo
	ListTodoRequest
	ListTodoResponse
	DeleteTodoRequest
	DeleteTodoResponse
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateTodoRequest struct {
	Todo *Todo `protobuf:"bytes,1,opt,name=todo" json:"todo,omitempty"`
}

func (m *CreateTodoRequest) Reset()                    { *m = CreateTodoRequest{} }
func (m *CreateTodoRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateTodoRequest) ProtoMessage()               {}
func (*CreateTodoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateTodoRequest) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

type CreateTodoResponse struct {
	Todo *Todo `protobuf:"bytes,1,opt,name=todo" json:"todo,omitempty"`
}

func (m *CreateTodoResponse) Reset()                    { *m = CreateTodoResponse{} }
func (m *CreateTodoResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateTodoResponse) ProtoMessage()               {}
func (*CreateTodoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateTodoResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

type Todo struct {
	Id          uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Done        bool   `protobuf:"varint,4,opt,name=done" json:"done,omitempty"`
}

func (m *Todo) Reset()                    { *m = Todo{} }
func (m *Todo) String() string            { return proto.CompactTextString(m) }
func (*Todo) ProtoMessage()               {}
func (*Todo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Todo) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Todo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Todo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Todo) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type ListTodoRequest struct {
}

func (m *ListTodoRequest) Reset()                    { *m = ListTodoRequest{} }
func (m *ListTodoRequest) String() string            { return proto.CompactTextString(m) }
func (*ListTodoRequest) ProtoMessage()               {}
func (*ListTodoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ListTodoResponse struct {
	Todos []*Todo `protobuf:"bytes,1,rep,name=todos" json:"todos,omitempty"`
}

func (m *ListTodoResponse) Reset()                    { *m = ListTodoResponse{} }
func (m *ListTodoResponse) String() string            { return proto.CompactTextString(m) }
func (*ListTodoResponse) ProtoMessage()               {}
func (*ListTodoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ListTodoResponse) GetTodos() []*Todo {
	if m != nil {
		return m.Todos
	}
	return nil
}

type DeleteTodoRequest struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteTodoRequest) Reset()                    { *m = DeleteTodoRequest{} }
func (m *DeleteTodoRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteTodoRequest) ProtoMessage()               {}
func (*DeleteTodoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *DeleteTodoRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type DeleteTodoResponse struct {
	Todo []*Todo `protobuf:"bytes,1,rep,name=todo" json:"todo,omitempty"`
}

func (m *DeleteTodoResponse) Reset()                    { *m = DeleteTodoResponse{} }
func (m *DeleteTodoResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteTodoResponse) ProtoMessage()               {}
func (*DeleteTodoResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteTodoResponse) GetTodo() []*Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateTodoRequest)(nil), "main.createTodoRequest")
	proto.RegisterType((*CreateTodoResponse)(nil), "main.createTodoResponse")
	proto.RegisterType((*Todo)(nil), "main.Todo")
	proto.RegisterType((*ListTodoRequest)(nil), "main.listTodoRequest")
	proto.RegisterType((*ListTodoResponse)(nil), "main.listTodoResponse")
	proto.RegisterType((*DeleteTodoRequest)(nil), "main.deleteTodoRequest")
	proto.RegisterType((*DeleteTodoResponse)(nil), "main.deleteTodoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TodoService service

type TodoServiceClient interface {
	CreateTodo(ctx context.Context, in *CreateTodoRequest, opts ...grpc.CallOption) (*CreateTodoResponse, error)
	ListTodo(ctx context.Context, in *ListTodoRequest, opts ...grpc.CallOption) (*ListTodoResponse, error)
	DeleteTodo(ctx context.Context, in *DeleteTodoRequest, opts ...grpc.CallOption) (*DeleteTodoResponse, error)
}

type todoServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoServiceClient(cc *grpc.ClientConn) TodoServiceClient {
	return &todoServiceClient{cc}
}

func (c *todoServiceClient) CreateTodo(ctx context.Context, in *CreateTodoRequest, opts ...grpc.CallOption) (*CreateTodoResponse, error) {
	out := new(CreateTodoResponse)
	err := grpc.Invoke(ctx, "/main.TodoService/createTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) ListTodo(ctx context.Context, in *ListTodoRequest, opts ...grpc.CallOption) (*ListTodoResponse, error) {
	out := new(ListTodoResponse)
	err := grpc.Invoke(ctx, "/main.TodoService/listTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) DeleteTodo(ctx context.Context, in *DeleteTodoRequest, opts ...grpc.CallOption) (*DeleteTodoResponse, error) {
	out := new(DeleteTodoResponse)
	err := grpc.Invoke(ctx, "/main.TodoService/deleteTodo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TodoService service

type TodoServiceServer interface {
	CreateTodo(context.Context, *CreateTodoRequest) (*CreateTodoResponse, error)
	ListTodo(context.Context, *ListTodoRequest) (*ListTodoResponse, error)
	DeleteTodo(context.Context, *DeleteTodoRequest) (*DeleteTodoResponse, error)
}

func RegisterTodoServiceServer(s *grpc.Server, srv TodoServiceServer) {
	s.RegisterService(&_TodoService_serviceDesc, srv)
}

func _TodoService_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.TodoService/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).CreateTodo(ctx, req.(*CreateTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_ListTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).ListTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.TodoService/ListTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).ListTodo(ctx, req.(*ListTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_DeleteTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).DeleteTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.TodoService/DeleteTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).DeleteTodo(ctx, req.(*DeleteTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.TodoService",
	HandlerType: (*TodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createTodo",
			Handler:    _TodoService_CreateTodo_Handler,
		},
		{
			MethodName: "listTodo",
			Handler:    _TodoService_ListTodo_Handler,
		},
		{
			MethodName: "deleteTodo",
			Handler:    _TodoService_DeleteTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "main.proto",
}

func init() { proto.RegisterFile("main.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcb, 0x4e, 0xc3, 0x30,
	0x10, 0xac, 0x93, 0x14, 0x95, 0x8d, 0x78, 0x64, 0xc5, 0xc3, 0xea, 0x01, 0x59, 0xe6, 0x92, 0x53,
	0x0f, 0x6d, 0x6f, 0x9c, 0xfa, 0x0b, 0x81, 0x1f, 0x68, 0xe3, 0x3d, 0x58, 0x0a, 0x71, 0x88, 0x0d,
	0xdf, 0xc9, 0x27, 0xa1, 0x38, 0x84, 0x84, 0x18, 0x89, 0x9b, 0x77, 0x76, 0x46, 0x3b, 0x33, 0x09,
	0xc0, 0xeb, 0x51, 0xd7, 0x9b, 0xa6, 0x35, 0xce, 0x60, 0xd2, 0xbd, 0xe5, 0x0e, 0xb2, 0xb2, 0xa5,
	0xa3, 0xa3, 0x17, 0xa3, 0x4c, 0x41, 0x6f, 0xef, 0x64, 0x1d, 0x3e, 0x40, 0xe2, 0x8c, 0x32, 0x9c,
	0x09, 0x96, 0xa7, 0x5b, 0xd8, 0x78, 0x95, 0x27, 0x78, 0x5c, 0xee, 0x01, 0xa7, 0x22, 0xdb, 0x98,
	0xda, 0xd2, 0xbf, 0xaa, 0x13, 0x24, 0xdd, 0x84, 0x97, 0x10, 0x69, 0xe5, 0x59, 0x17, 0x45, 0xa4,
	0x15, 0xde, 0xc0, 0xd2, 0x69, 0x57, 0x11, 0x8f, 0x04, 0xcb, 0xcf, 0x8b, 0x7e, 0x40, 0x01, 0xa9,
	0x22, 0x5b, 0xb6, 0xba, 0x71, 0xda, 0xd4, 0x3c, 0xf6, 0xbb, 0x29, 0x84, 0x08, 0x89, 0x32, 0x35,
	0xf1, 0x44, 0xb0, 0x7c, 0x55, 0xf8, 0xb7, 0xcc, 0xe0, 0xaa, 0xd2, 0xd6, 0x4d, 0xc2, 0xc8, 0x3d,
	0x5c, 0x8f, 0xd0, 0xb7, 0x55, 0x01, 0xcb, 0xce, 0x92, 0xe5, 0x4c, 0xc4, 0x33, 0xaf, 0xfd, 0x42,
	0x3e, 0x42, 0xa6, 0xa8, 0xa2, 0xdf, 0xbd, 0xcc, 0x9c, 0x77, 0x3d, 0x4c, 0x49, 0x41, 0x0f, 0xf1,
	0x5f, 0x3d, 0x6c, 0x3f, 0x19, 0xa4, 0xdd, 0xf8, 0x4c, 0xed, 0x87, 0x2e, 0x09, 0x0f, 0x00, 0x63,
	0x9b, 0x78, 0xdf, 0xf3, 0x83, 0x8f, 0xb2, 0xe6, 0xe1, 0xa2, 0x3f, 0x28, 0x17, 0xf8, 0x04, 0xab,
	0x21, 0x23, 0xde, 0xf6, 0xbc, 0x59, 0x0d, 0xeb, 0xbb, 0x39, 0xfc, 0x23, 0x3e, 0x00, 0x8c, 0x29,
	0x86, 0xfb, 0x41, 0xf8, 0xe1, 0x7e, 0x18, 0x58, 0x2e, 0x4e, 0x67, 0xfe, 0x97, 0xda, 0x7d, 0x05,
	0x00, 0x00, 0xff, 0xff, 0xcc, 0x13, 0x34, 0x54, 0x60, 0x02, 0x00, 0x00,
}
